{
    "openapi": "3.0.0",
    "info": {
        "title": "Educ-Map API Documentation",
        "description": "API for higher education institutions directory in Madagascar",
        "contact": {
            "name": "Educ-Map Support",
            "email": "contact@educ-map.mg"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://educ-map.lndo.site",
            "description": "Educ-Map API Server"
        },
        {
            "url": ""
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a new user account",
                "description": "Register a new user.",
                "operationId": "a718f172ff3ac464d723835815f8fb57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Test User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "ROLE_USER"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_token..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The email has already been taken."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login to get an authentication token",
                "description": "Login a user.",
                "operationId": "44212a9096e4b09358281e9ec8a0701d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "test@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "ROLE_USER"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_token..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The provided credentials are incorrect."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get the currently authenticated user's profile",
                "description": "Get the authenticated user profile.",
                "operationId": "f606b7972b0f95109c9cd5b591061f41",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Test User"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test@example.com"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "ROLE_USER"
                                            ]
                                        },
                                        "associated_establishment": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update the currently authenticated user's profile",
                "description": "Update user profile.",
                "operationId": "d91fb9f3d0083514cc5ce6a50d001bad",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Name"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "updated@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "ROLE_USER"
                                                    ]
                                                },
                                                "associated_establishment": {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The email has already been taken."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Invalidate the current authentication token",
                "description": "Logout a user by invalidating the token.",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a list of all categories",
                "description": "Display a listing of the categories with filtering options.",
                "operationId": "8e17a9627dbed245cf032f867569cf11",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by category name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by (category_name, created_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "category_name",
                            "enum": [
                                "category_name",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Store a newly created category in storage.",
                "operationId": "2140f330d926c3e118cab9391dc4ff42",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Public University"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "State-funded universities",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "description": "Display the specified category.",
                "operationId": "6a038665b20191638e1608ea8897bf64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_establishments",
                        "in": "query",
                        "description": "Include establishments count for this category",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "description": "Update the specified category in storage.",
                "operationId": "e4e7aaba2eee4d7e813dea85bf3cf3ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Remove the specified category from storage.",
                "operationId": "f365d407ea3098d6b545847b09322b13",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "409": {
                        "description": "Conflict - Category has associated establishments"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/establishments": {
            "get": {
                "tags": [
                    "Establishments"
                ],
                "summary": "Get a paginated list of establishments with optional filtering and sorting",
                "description": "Display a listing of the establishments with filtering options.",
                "operationId": "f49f6c92f5a721f0b976ba540c3c4bc8",
                "parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Filter by region name (exact match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by establishment name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "abbreviation",
                        "in": "query",
                        "description": "Filter by abbreviation (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category name (exact match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Filter by domain name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "Filter by label name (exact match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reference_start_date",
                        "in": "query",
                        "description": "Filter by references with date after this value (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "reference_end_date",
                        "in": "query",
                        "description": "Filter by references with date before this value (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by (name, student_count, reference_date)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "name",
                            "enum": [
                                "name",
                                "student_count",
                                "reference_date"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of establishments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ecole Supérieure des Sciences Agronomiques"
                                                    },
                                                    "abbreviation": {
                                                        "type": "string",
                                                        "example": "ESSA"
                                                    },
                                                    "logo_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "region": {
                                                        "type": "string"
                                                    },
                                                    "latitude": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "longitude": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "category": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string"
                                                },
                                                "last": {
                                                    "type": "string"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Establishments"
                ],
                "summary": "Create a new establishment",
                "description": "Store a newly created establishment in storage.",
                "operationId": "1b279e48bd9141a0870606cd6f9a7928",
                "requestBody": {
                    "description": "Establishment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "abbreviation": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "website": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "student_count": {
                                        "type": "integer"
                                    },
                                    "success_rate": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "professional_insertion_rate": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "first_habilitation_year": {
                                        "type": "integer"
                                    },
                                    "labels": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Establishment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/establishments/{id}": {
            "get": {
                "tags": [
                    "Establishments"
                ],
                "summary": "Get establishment details",
                "description": "Display the specified establishment.",
                "operationId": "9c39c1f3cfb0d8b690f31253472f149b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the establishment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Establishment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "abbreviation": {
                                                    "type": "string"
                                                },
                                                "logo_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "region": {
                                                    "type": "string"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "website": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "student_count": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "success_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "nullable": true
                                                },
                                                "professional_insertion_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "nullable": true
                                                },
                                                "first_habilitation_year": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "category": {
                                                    "type": "object"
                                                },
                                                "departments": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "labels": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "program_offerings": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Establishment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Establishments"
                ],
                "summary": "Update an existing establishment",
                "description": "Update the specified establishment in storage.",
                "operationId": "cf6826fefe96e123a317af3107f3eb7a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the establishment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "abbreviation": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "website": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "student_count": {
                                        "type": "integer"
                                    },
                                    "success_rate": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "professional_insertion_rate": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "first_habilitation_year": {
                                        "type": "integer"
                                    },
                                    "labels": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Establishment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Establishment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Establishments"
                ],
                "summary": "Delete an establishment",
                "description": "Remove the specified establishment from storage.",
                "operationId": "58efb50be5573a7ed9ee9f46ec4cc180",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the establishment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Establishment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Establishment not found"
                    }
                }
            }
        },
        "/api/establishments/recent": {
            "get": {
                "tags": [
                    "Establishments"
                ],
                "summary": "Get recently added establishments",
                "description": "Get recently added establishments or those with recent accreditations.",
                "operationId": "b5c68b91a88f2e3f98d27e2873db2358",
                "responses": {
                    "200": {
                        "description": "List of recent establishments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "abbreviation": {
                                                        "type": "string"
                                                    },
                                                    "logo_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "region": {
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/map/markers": {
            "get": {
                "tags": [
                    "Map & Comparison"
                ],
                "summary": "Get lightweight establishment data for map markers",
                "description": "Get lightweight establishment data for map markers.",
                "operationId": "7f66df71f9ac69da0a0adf5a07426056",
                "responses": {
                    "200": {
                        "description": "List of map marker data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Ecole Supérieure des Sciences Agronomiques"
                                                    },
                                                    "abbreviation": {
                                                        "type": "string",
                                                        "example": "ESSA"
                                                    },
                                                    "latitude": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": -18.916779
                                                    },
                                                    "longitude": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 47.520526
                                                    },
                                                    "category_name": {
                                                        "type": "string",
                                                        "example": "Public University"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/compare": {
            "get": {
                "tags": [
                    "Map & Comparison"
                ],
                "summary": "Compare multiple establishments side by side",
                "description": "Compare multiple establishments side by side.",
                "operationId": "bbc5057d4eee10926f6828ee3c16d337",
                "parameters": [
                    {
                        "name": "ids[]",
                        "in": "query",
                        "description": "Array of establishment IDs to compare",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comparison data for selected establishments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "abbreviation": {
                                                        "type": "string"
                                                    },
                                                    "student_count": {
                                                        "type": "integer"
                                                    },
                                                    "success_rate": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "professional_insertion_rate": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "tuition_fees_info": {
                                                        "type": "string"
                                                    },
                                                    "program_duration_info": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/lists": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get information about all available list endpoints",
                "description": "Get a summary of all available list endpoints.",
                "operationId": "2329d602df0234ab8b79e2a3cf7c7cf4",
                "responses": {
                    "200": {
                        "description": "Summary of available list endpoints",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "endpoints": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "categories"
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "/api/categories"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Get list of educational institution categories"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/domains": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get a list of all domains",
                "description": "Get all domains for filter dropdowns.",
                "operationId": "439e1afc93d6dc807f095edec9e8c1e6",
                "responses": {
                    "200": {
                        "description": "List of domains",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Computer Science"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Study of computers and computational systems",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/grades": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get a list of all grades",
                "description": "Get all grades for filter dropdowns.",
                "operationId": "271ceaa572a096d6eb3e20f238f52e54",
                "responses": {
                    "200": {
                        "description": "List of grades",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Licence"
                                                    },
                                                    "level": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Bachelor's degree equivalent",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mentions": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get a list of all mentions",
                "description": "Get all mentions for filter dropdowns.",
                "operationId": "1100cf39bf8a47c0ded3617252c6821e",
                "responses": {
                    "200": {
                        "description": "List of mentions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Computer Science"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Study of algorithms and computational systems",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/labels": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Get a list of all labels",
                "description": "Get all labels for filter dropdowns.",
                "operationId": "73766328d6e9365af8ce9c00cf93e827",
                "responses": {
                    "200": {
                        "description": "List of labels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Excellence"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Institution recognized for excellence",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me/searches": {
            "get": {
                "tags": [
                    "Search History"
                ],
                "summary": "Get the authenticated user's saved searches",
                "description": "Retrieve saved searches for the authenticated user.",
                "operationId": "e626ff4dc82e746eba4896a60da1f65e",
                "responses": {
                    "200": {
                        "description": "List of saved searches",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "user_id": {
                                                "type": "integer"
                                            },
                                            "search_query_text": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "search_filters": {
                                                "type": "object",
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Search History"
                ],
                "summary": "Save a search query and filters for the authenticated user",
                "description": "Store a newly created search history in storage.",
                "operationId": "48666e6496c8666209d84663a423ed14",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "search_query_text": {
                                        "type": "string",
                                        "example": "Computer Science Programs"
                                    },
                                    "search_filters": {
                                        "type": "object",
                                        "example": {
                                            "region": "Analamanga",
                                            "domain": "Computer Science"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Search saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Search saved successfully"
                                        },
                                        "search": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "search_query_text": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "search_filters": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/me/searches/{id}": {
            "delete": {
                "tags": [
                    "Search History"
                ],
                "summary": "Delete a saved search for the authenticated user",
                "description": "Delete the specified search history.",
                "operationId": "998e47ae21ba6b35d3c5ba988fd39694",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the saved search to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Search deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized - not owner of this search"
                    },
                    "404": {
                        "description": "Search not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryDetailResource": {
                "title": "Category Detail Resource",
                "description": "Detailed category resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Public University"
                    },
                    "description": {
                        "type": "string",
                        "example": "State-funded universities",
                        "nullable": true
                    },
                    "establishments_count": {
                        "description": "Number of establishments in this category (included when include_establishments=true)",
                        "type": "integer",
                        "example": 15,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "Category Resource",
                "description": "Category resource for list view",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Public University"
                    },
                    "description": {
                        "type": "string",
                        "example": "State-funded universities",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EstablishmentDetailResource": {
                "title": "Establishment Detail Resource",
                "description": "Detailed establishment resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Ecole Supérieure des Sciences Agronomiques"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "ESSA"
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "https://educ-map.mg/storage/logos/essa.png",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "BP 175, 101 Antananarivo, Madagascar"
                    },
                    "region": {
                        "type": "string",
                        "example": "Analamanga"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": -18.916779
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 47.520526
                    },
                    "website": {
                        "type": "string",
                        "example": "https://essa.mg",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "example": "contact@essa.mg",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "example": "+261 20 22 318 35",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "student_count": {
                        "type": "integer",
                        "example": 1200,
                        "nullable": true
                    },
                    "success_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 85.5,
                        "nullable": true
                    },
                    "professional_insertion_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 78.3,
                        "nullable": true
                    },
                    "first_habilitation_year": {
                        "type": "integer",
                        "example": 1990,
                        "nullable": true
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Public University"
                            }
                        },
                        "type": "object"
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Department of Agronomy"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Excellence"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "program_offerings": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "department_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "department_name": {
                                    "type": "string",
                                    "example": "Department of Agronomy"
                                },
                                "domain_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "domain_name": {
                                    "type": "string",
                                    "example": "Agricultural Sciences"
                                },
                                "grade_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "grade_name": {
                                    "type": "string",
                                    "example": "Master"
                                },
                                "mention_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "mention_name": {
                                    "type": "string",
                                    "example": "Agricultural Engineering"
                                },
                                "tuition_fees_info": {
                                    "type": "string",
                                    "example": "1,500,000 Ar/year",
                                    "nullable": true
                                },
                                "program_duration_info": {
                                    "type": "string",
                                    "example": "2 years"
                                },
                                "accreditations": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "reference_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "reference_type": {
                                                "type": "string",
                                                "example": "ministerial_decree"
                                            },
                                            "accreditation_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2022-07-15"
                                            },
                                            "is_recent": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "reference": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "main_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2022-07-15"
                                                    },
                                                    "document_url": {
                                                        "type": "string",
                                                        "example": "https://educ-map.mg/storage/decrees/decree_2022_125.pdf",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EstablishmentResource": {
                "title": "Establishment Resource",
                "description": "Establishment resource for list view",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Ecole Supérieure des Sciences Agronomiques"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "ESSA"
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "https://educ-map.mg/storage/logos/essa.png",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "BP 175, 101 Antananarivo, Madagascar"
                    },
                    "region": {
                        "type": "string",
                        "example": "Analamanga"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": -18.916779
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 47.520526
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Public University"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "MapMarker": {
                "title": "Map Marker",
                "description": "Lightweight establishment data for map markers",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Ecole Supérieure des Sciences Agronomiques"
                    },
                    "abbreviation": {
                        "type": "string",
                        "example": "ESSA"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": -18.916779
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 47.520526
                    },
                    "category_name": {
                        "type": "string",
                        "example": "Public University"
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "title": "Pagination Links",
                "description": "Pagination links for API responses",
                "properties": {
                    "first": {
                        "type": "string",
                        "example": "https://example.com/api/establishments?page=1"
                    },
                    "last": {
                        "type": "string",
                        "example": "https://example.com/api/establishments?page=5"
                    },
                    "prev": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "next": {
                        "type": "string",
                        "example": "https://example.com/api/establishments?page=2"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Meta",
                "description": "Pagination metadata for API responses",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "path": {
                        "type": "string",
                        "example": "https://example.com/api/establishments"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 75
                    }
                },
                "type": "object"
            },
            "SearchHistory": {
                "title": "Search History",
                "description": "User search history entry",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "search_query_text": {
                        "type": "string",
                        "example": "Computer Science Programs"
                    },
                    "search_filters": {
                        "type": "object",
                        "example": {
                            "region": "Analamanga",
                            "domain": "Computer Science"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "ROLE_USER"
                        ]
                    },
                    "associated_establishment_id": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter token in format (Bearer <token>)"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints for user authentication and profile management"
        },
        {
            "name": "Categories",
            "description": "Endpoints for accessing and managing educational institution categories"
        },
        {
            "name": "Establishments",
            "description": "Endpoints for accessing and managing establishment data"
        },
        {
            "name": "Map & Comparison",
            "description": "Endpoints for map markers and establishment comparison"
        },
        {
            "name": "Lists",
            "description": "Endpoints for accessing simple list data for filters and forms"
        },
        {
            "name": "Search History",
            "description": "Endpoints for managing user search history"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}